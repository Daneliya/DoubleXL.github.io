(window.webpackJsonp=window.webpackJsonp||[]).push([[123],{1727:function(v,_,t){"use strict";t.r(_);var a=t(3),s=Object(a.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h2",{attrs:{id:"调优概述"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#调优概述"}},[v._v("#")]),v._v(" 调优概述")]),v._v(" "),_("p",[v._v("为什么要调优")]),v._v(" "),_("ul",[_("li",[v._v("防止出现OOM")]),v._v(" "),_("li",[v._v("解决OOM")]),v._v(" "),_("li",[v._v("减少Full GC出现的频率")])]),v._v(" "),_("p",[v._v("生产环境中的问题")]),v._v(" "),_("ul",[_("li",[v._v("生产环境发生了内存溢出该如何处理？")]),v._v(" "),_("li",[v._v("生产环境应该给服务器分配多少内存合适？")]),v._v(" "),_("li",[v._v("如何对垃圾回收器的性能进行调优？")]),v._v(" "),_("li",[v._v("生产环境CPU负载飙高该如何处理？")]),v._v(" "),_("li",[v._v("生产环境应该给应用分配多少线程合适？")]),v._v(" "),_("li",[v._v("不加log，如何确定请求是否执行了某一行代码？")]),v._v(" "),_("li",[v._v("不加log，如何实时查看某个方法的入参与返回值？")])]),v._v(" "),_("p",[v._v("监控的依据")]),v._v(" "),_("ul",[_("li",[v._v("运行日志")]),v._v(" "),_("li",[v._v("异常堆栈")]),v._v(" "),_("li",[v._v("GC日志")]),v._v(" "),_("li",[v._v("线程快照")]),v._v(" "),_("li",[v._v("堆转储快照")])]),v._v(" "),_("p",[v._v("调优的大方向")]),v._v(" "),_("ul",[_("li",[v._v("合理地编写代码")]),v._v(" "),_("li",[v._v("充分并合理的使用硬件资源")]),v._v(" "),_("li",[v._v("合理地进行JVM调优")])]),v._v(" "),_("h2",{attrs:{id:"性能优化的步骤"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#性能优化的步骤"}},[v._v("#")]),v._v(" 性能优化的步骤")]),v._v(" "),_("p",[v._v("第1步：性能监控")]),v._v(" "),_("ul",[_("li",[v._v("GC频繁")]),v._v(" "),_("li",[v._v("cpu load过高")]),v._v(" "),_("li",[v._v("OOM")]),v._v(" "),_("li",[v._v("内存泄露")]),v._v(" "),_("li",[v._v("死锁")]),v._v(" "),_("li",[v._v("程序响应时间较长")])]),v._v(" "),_("p",[v._v("第2步：性能分析")]),v._v(" "),_("ul",[_("li",[v._v("打印GC日志，通过GCviewer或者 "),_("a",{attrs:{href:"http://gceasy.io/",target:"_blank",rel:"noopener noreferrer"}},[v._v("http://gceasy.io"),_("OutboundLink")],1),v._v(" 来分析异常信息")]),v._v(" "),_("li",[v._v("灵活运用命令行工具、jstack、jmap、jinfo等")]),v._v(" "),_("li",[v._v("dump出堆文件，使用内存分析工具分析文件")]),v._v(" "),_("li",[v._v("使用阿里Arthas、jconsole、JVisualVM来实时查看JVM状态")]),v._v(" "),_("li",[v._v("jstack查看堆栈信息")])]),v._v(" "),_("div",{staticClass:"language- line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[v._v("Sun JDK监控和故障常用处理命令：\n\njps：JVM Process Status Tool，显示指定系统内所有的HotSpot虚拟机进程。\njstat：JVM statistics Monitoring是用于监视虚拟机运行时状态信息的命令，它可以显示出虚拟机进程中的类装载、内存、垃圾收集、JIT编译等运行数据。\njmap：JVM Memory Map命令用于生成heap dump文件。\njhat：JVM Heap Analysis Tool命令是与jmap搭配使用，用来分析jmap生成的dump，jhat内置了一个微型的HTTP/HTML服务器，生成dump的分析结果后，可以在浏览器中查看。\njstack：用于生成java虚拟机当前时刻的线程快照。\njinfo：JVM Configuration info 这个命令作用是实时查看和调整虚拟机运行参数。\n")])]),v._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[v._v("1")]),_("br"),_("span",{staticClass:"line-number"},[v._v("2")]),_("br"),_("span",{staticClass:"line-number"},[v._v("3")]),_("br"),_("span",{staticClass:"line-number"},[v._v("4")]),_("br"),_("span",{staticClass:"line-number"},[v._v("5")]),_("br"),_("span",{staticClass:"line-number"},[v._v("6")]),_("br"),_("span",{staticClass:"line-number"},[v._v("7")]),_("br"),_("span",{staticClass:"line-number"},[v._v("8")]),_("br")])]),_("p",[v._v("第3步：性能调优")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("适当增加内存，根据业务背景选择垃圾回收器")]),v._v(" "),_("div",{staticClass:"language- line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[v._v("设定堆内存大小\n-Xmx：堆内存最大限制\n\n设定新生代大小， 新生代不宜太小，否则会有大量对象涌入老年代。 -XX:NewSize：新生代大小 -XX:NewRatio 新生代和老生代占比 -XX:SurvivorRatio：伊甸园空间和幸存者空间的占比\n\n设定垃圾回收器\n年轻代用 -XX:+UseParNewGC\n年老代用-XX:+UseConcMarkSweepGC\n")])]),v._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[v._v("1")]),_("br"),_("span",{staticClass:"line-number"},[v._v("2")]),_("br"),_("span",{staticClass:"line-number"},[v._v("3")]),_("br"),_("span",{staticClass:"line-number"},[v._v("4")]),_("br"),_("span",{staticClass:"line-number"},[v._v("5")]),_("br"),_("span",{staticClass:"line-number"},[v._v("6")]),_("br"),_("span",{staticClass:"line-number"},[v._v("7")]),_("br"),_("span",{staticClass:"line-number"},[v._v("8")]),_("br")])])]),v._v(" "),_("li",[_("p",[v._v("优化代码，控制内存使用")])]),v._v(" "),_("li",[_("p",[v._v("增加机器，分散节点压力")])]),v._v(" "),_("li",[_("p",[v._v("合理设置线程池线程数量")])]),v._v(" "),_("li",[_("p",[v._v("使用中间件提高程序效率，比如缓存、消息队列等")])]),v._v(" "),_("li",[_("p",[v._v("其他……")])])]),v._v(" "),_("h2",{attrs:{id:"性能评价-测试指标"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#性能评价-测试指标"}},[v._v("#")]),v._v(" 性能评价/测试指标")]),v._v(" "),_("p",[v._v("停顿时间（或响应时间）")]),v._v(" "),_("p",[v._v("提交请求和返回该请求的响应之间使用的时间，一般比较关注平均响应时间。常用操作的响应时间列表：")]),v._v(" "),_("table",[_("thead",[_("tr",[_("th",[v._v("操作")]),v._v(" "),_("th",[v._v("响应时间")])])]),v._v(" "),_("tbody",[_("tr",[_("td",[v._v("打开一个站点")]),v._v(" "),_("td",[v._v("几秒")])]),v._v(" "),_("tr",[_("td",[v._v("数据库查询一条记录（有索引）")]),v._v(" "),_("td",[v._v("十几毫秒")])]),v._v(" "),_("tr",[_("td",[v._v("机械磁盘一次寻址定位")]),v._v(" "),_("td",[v._v("4毫秒")])]),v._v(" "),_("tr",[_("td",[v._v("从机械磁盘顺序读取1M数据")]),v._v(" "),_("td",[v._v("2毫秒")])]),v._v(" "),_("tr",[_("td",[v._v("从SSD磁盘顺序读取1M数据")]),v._v(" "),_("td",[v._v("0.3毫秒")])]),v._v(" "),_("tr",[_("td",[v._v("从远程分布式换成Redis 读取一个数据")]),v._v(" "),_("td",[v._v("0.5毫秒")])]),v._v(" "),_("tr",[_("td",[v._v("从内存读取 1M数据")]),v._v(" "),_("td",[v._v("十几微妙")])]),v._v(" "),_("tr",[_("td",[v._v("Java程序本地方法调用")]),v._v(" "),_("td",[v._v("几微妙")])]),v._v(" "),_("tr",[_("td",[v._v("网络传输2Kb数据")]),v._v(" "),_("td",[v._v("1 微妙")])])])]),v._v(" "),_("p",[v._v("在垃圾回收环节中：")]),v._v(" "),_("ul",[_("li",[v._v("暂停时间：执行垃圾收集时，程序的工作线程被暂停的时间。")]),v._v(" "),_("li",[v._v("-XX:MaxGCPauseMillis")])]),v._v(" "),_("p",[v._v("吞吐量")]),v._v(" "),_("ul",[_("li",[v._v("对单位时间内完成的工作量（请求）的量度")]),v._v(" "),_("li",[v._v("在GC中：运行用户代码的事件占总运行时间的比例（总运行时间：程序的运行时间+内存回收的时间）")]),v._v(" "),_("li",[v._v("吞吐量为1-1/(1+n)，其中-XX::GCTimeRatio=n")])]),v._v(" "),_("p",[v._v("并发数")]),v._v(" "),_("ul",[_("li",[v._v("同一时刻，对服务器有实际交互的请求数")])]),v._v(" "),_("p",[v._v("内存占用")]),v._v(" "),_("ul",[_("li",[v._v("Java堆区所占的内存大小")])]),v._v(" "),_("p",[v._v("相互间的关系")]),v._v(" "),_("p",[v._v("以高速公路通行状况为例")]),v._v(" "),_("ul",[_("li",[v._v("吞吐量：每天通过高速公路收费站的车辆的数据")]),v._v(" "),_("li",[v._v("并发数：高速公路上正在行驶的车辆的数目")]),v._v(" "),_("li",[v._v("响应时间：车速")])]),v._v(" "),_("h2",{attrs:{id:"大厂面试题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#大厂面试题"}},[v._v("#")]),v._v(" 大厂面试题")]),v._v(" "),_("p",[v._v("支付宝：")]),v._v(" "),_("p",[v._v("支付宝三面：JVM性能调优都做了什么？")]),v._v(" "),_("p",[v._v("小米：")]),v._v(" "),_("p",[v._v("有做过JVM内存优化吗？")]),v._v(" "),_("p",[v._v("从SQL、JVM、架构、数据库四个方面讲讲优化思路")]),v._v(" "),_("p",[v._v("蚂蚁金服：")]),v._v(" "),_("p",[v._v("JVM的编译优化")]),v._v(" "),_("p",[v._v("jvm性能调优都做了什么")]),v._v(" "),_("p",[v._v("JVM诊断调优工具用过哪些？")]),v._v(" "),_("p",[v._v("二面：jvm怎样调优，堆内存、栈空间设置多少合适")]),v._v(" "),_("p",[v._v("三面：JVM相关的分析工具使用过的有哪些？具体的性能调优步骤如何")]),v._v(" "),_("p",[v._v("阿里：")]),v._v(" "),_("p",[v._v("如何进行JVM调优？有哪些方法？")]),v._v(" "),_("p",[v._v("如何理解内存泄漏问题？有哪些情况会导致内存泄漏？如何解决？")]),v._v(" "),_("p",[v._v("字节跳动：")]),v._v(" "),_("p",[v._v("三面：JVM如何调优、参数怎么调？")]),v._v(" "),_("p",[v._v("拼多多：")]),v._v(" "),_("p",[v._v("从SQL、JVM、架构、数据库四个方面讲讲优化思路")]),v._v(" "),_("p",[v._v("京东：")]),v._v(" "),_("p",[v._v("JVM诊断调优工具用过哪些？")]),v._v(" "),_("p",[v._v("每秒几十万并发的秒杀系统为什么会频繁发生GC？")]),v._v(" "),_("p",[v._v("日均百万级交易系统如何优化JVM？")]),v._v(" "),_("p",[v._v("线上生产系统OOM如何监控及定位与解决？")]),v._v(" "),_("p",[v._v("高并发系统如何基于G1垃圾回收器优化性能？")])])}),[],!1,null,null,null);_.default=s.exports}}]);