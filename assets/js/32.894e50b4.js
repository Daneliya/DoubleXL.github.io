(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{1623:function(s,a,t){s.exports=t.p+"assets/img/20190606180834733.5ed36477.png"},1624:function(s,a,t){s.exports=t.p+"assets/img/image-20240402010612109.36bffa8c.png"},1625:function(s,a,t){s.exports=t.p+"assets/img/nUhEtf9xLKZX7Q2.83c55ce2.png"},1626:function(s,a,t){s.exports=t.p+"assets/img/image-20240403001518713.e1d32e71.png"},1627:function(s,a,t){s.exports=t.p+"assets/img/image-20240403002146866.8bca5cf6.png"},1628:function(s,a,t){s.exports=t.p+"assets/img/image-20240405015332787.e553c59a.png"},1629:function(s,a,t){s.exports=t.p+"assets/img/image-20240405020042915.dc127d45.png"},1630:function(s,a,t){s.exports=t.p+"assets/img/image-20240405020308355.3d4c3346.png"},1631:function(s,a,t){s.exports=t.p+"assets/img/image-20240405020710688.730355c8.png"},1632:function(s,a,t){s.exports=t.p+"assets/img/image-20240405225245679.ba7be349.png"},1633:function(s,a,t){s.exports=t.p+"assets/img/20201022161828318.e451ee6d.png"},1634:function(s,a,t){s.exports=t.p+"assets/img/20201022170824339.692b5647.png"},1635:function(s,a,t){s.exports=t.p+"assets/img/4f8570206a4b4d40bf7f03e7b488205a.47ecca46.png"},1636:function(s,a,t){s.exports=t.p+"assets/img/image-20240407001349605.d21e3a23.png"},1637:function(s,a,t){s.exports=t.p+"assets/img/bb0592deffb84b52a6578b19f03f9c8d.a4445810.jpeg"},1947:function(s,a,t){"use strict";t.r(a);var v=t(3),_=Object(v.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"数据库的基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库的基本概念"}},[s._v("#")]),s._v(" 数据库的基本概念")]),s._v(" "),a("p",[s._v("考点1：数据库体系结构")]),s._v(" "),a("p",[s._v("考点2：三级模式结构")]),s._v(" "),a("p",[s._v("考点3：数据仓库")]),s._v(" "),a("h3",{attrs:{id:"考点1-数据库体系结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#考点1-数据库体系结构"}},[s._v("#")]),s._v(" 考点1：数据库体系结构")]),s._v(" "),a("h4",{attrs:{id:"数据库系统的体系结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库系统的体系结构"}},[s._v("#")]),s._v(" 💐数据库系统的体系结构")]),s._v(" "),a("ol",[a("li",[s._v("集中式数据库系统\n"),a("ul",[a("li",[s._v("数据是集中的")]),s._v(" "),a("li",[s._v("数据管理是集中的")]),s._v(" "),a("li",[s._v("数据库系统的素有功能 (从形式的用户接口到DBMS核心)都集中在DBMS所在的计算机。")])])]),s._v(" "),a("li",[s._v("C/S结构\n"),a("ul",[a("li",[s._v("客户端负责数据表示")]),s._v(" "),a("li",[s._v("服务服务器主要负责数据库服务")]),s._v(" "),a("li",[s._v("数据库系统分为前端和后端")]),s._v(" "),a("li",[s._v("ODBC、JDBC")])])]),s._v(" "),a("li",[s._v("分布式数据库\n"),a("ul",[a("li",[s._v("物理上分布、逻辑上集中")]),s._v(" "),a("li",[s._v("物理上分布、逻辑上分布")]),s._v(" "),a("li",[s._v("特点")]),s._v(" "),a("li",[s._v("透明性")])])]),s._v(" "),a("li",[s._v("并行数据库\n"),a("ul",[a("li",[s._v("共享内存式")]),s._v(" "),a("li",[s._v("无共享式")])])])]),s._v(" "),a("h4",{attrs:{id:"分布式数据库特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分布式数据库特点"}},[s._v("#")]),s._v(" 💐分布式数据库特点")]),s._v(" "),a("ol",[a("li",[a("strong",[s._v("数据独立性")]),s._v("。除了数据的逻辑独立性与物理独立性外，还有数据分布独立性（分布透明性）。")]),s._v(" "),a("li",[a("strong",[s._v("集中与自治共享结合的控制结构")]),s._v("。各局部的DBMS可以独立地管理局部数据库，具有自治的功能。同时，系统又设有集中控制机制，协调各局部DBMS的工作，执行全局应用。")]),s._v(" "),a("li",[a("strong",[s._v("适当增加数据冗余度")]),s._v("。在不同的场地存储同一数据的多个副本，可以提高"),a("strong",[s._v("系统的可靠性和可用性")]),s._v("，同时也能提高系统性能。（提高系统的可用性，即当系统中某个节点发生故障时，因为数据有其他副本在非故障场地上，对其他所有场地来说，数据仍然是可用的，从而保证数据的完备性）。")]),s._v(" "),a("li",[a("strong",[s._v("全局的一致性、可串行性和可恢复性")]),s._v("。")])]),s._v(" "),a("h4",{attrs:{id:"分布式数据库透明性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分布式数据库透明性"}},[s._v("#")]),s._v(" 💐分布式数据库透明性")]),s._v(" "),a("ol",[a("li",[a("strong",[s._v("分片透明")]),s._v("：是指用户不必关心数据是如何分片的，它们对数据的操作在全局关系上进行，即如何分片对用户是透明的。")]),s._v(" "),a("li",[a("strong",[s._v("复制透明")]),s._v("：用户不用关心数据库在网络中各个节点的复制情况，被复制的数据的更新都由系统自动完成。")]),s._v(" "),a("li",[a("strong",[s._v("位置透明")]),s._v("：是指用户不必知道所操作的数据放在何处，即数据分配到哪个或哪些站点存储对用户是透明的。")]),s._v(" "),a("li",[a("strong",[s._v("局部映像透明性（逻辑透明）")]),s._v("：是最低层次的透明性，该透明性提供数据到局部数据库的映像，即用户不必关心局部DBMS支持哪种数据模型、使用哪种数据操纵语言，数据模型和操纵语言的转换是由系统完成的，因此，局部映像透明性对异构型和同构异质的分布式数据库系统是非常重要的。")])]),s._v(" "),a("h4",{attrs:{id:"例题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例题"}},[s._v("#")]),s._v(" 💐例题")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("在分布式数据库中有分片透明、复制透明、位置透明和逻辑透明等基本概念，其中: (D)是指局部数据模型透明，即用户或应用程序无需知道局部使用的是哪种数据模型; (A) 是指用户或应用程序不需要知道逻辑上访问的表具体是如何分块存储的。\nA分片透明 B复制透明 C位置透明 D逻辑透明\nA分片透明 B复制透明 C位置透明 D逻辑透明\n\n当某一场地故障时，系统可以使用其他场地上的副本而不至于使整个系统瘫痪。这称为分布式数据库的 (C)。\nA共享性\nB自治性\nC可用性\nD分布性\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h3",{attrs:{id:"考点2-三级模式结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#考点2-三级模式结构"}},[s._v("#")]),s._v(" 考点2：三级模式结构")]),s._v(" "),a("h4",{attrs:{id:"三级模式和两级映像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三级模式和两级映像"}},[s._v("#")]),s._v(" 🌸三级模式和两级映像")]),s._v(" "),a("p",[a("img",{attrs:{src:t(1623),alt:"img"}})]),s._v(" "),a("p",[s._v("三级模式")]),s._v(" "),a("ol",[a("li",[s._v("用户级--\x3e 外模式(反映了数据库系统的用户观)\n"),a("ul",[a("li",[s._v("外模式又称子模式或用户模式，对应于用户级。它是某个或某几个用户所看到的数据库的数据视图，是与某一应用有关的数据的"),a("a",{attrs:{href:"https://baike.baidu.com/item/%E9%80%BB%E8%BE%91%E8%A1%A8%E7%A4%BA",target:"_blank",rel:"noopener noreferrer"}},[s._v("逻辑表示"),a("OutboundLink")],1),s._v("。外模式是从模式导出的一个子集，包含模式中允许特定用户使用的那部分数据。用户可以通过外模式描述语言来描述、定义对应于用户的"),a("a",{attrs:{href:"https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E8%AE%B0%E5%BD%95",target:"_blank",rel:"noopener noreferrer"}},[s._v("数据记录"),a("OutboundLink")],1),s._v("(外模式)，也可以利用"),a("a",{attrs:{href:"https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E6%93%8D%E7%BA%B5%E8%AF%AD%E8%A8%80",target:"_blank",rel:"noopener noreferrer"}},[s._v("数据操纵语言"),a("OutboundLink")],1),s._v("(Data Manipulation Language，DML)对这些数据记录进行操作。")])])]),s._v(" "),a("li",[s._v("概念级--\x3e 概念模式（反映了数据库系统的整体观）\n"),a("ul",[a("li",[s._v("概念模式又称模式或逻辑模式，对应于概念级。它是由数据库设计者综合所有用户的数据，按照统一的观点构造的全局逻辑结构，是对数据库中全部数据的逻辑结构和特征的总体描述，是所有用户的公共数据视图(全局视图)。它是由数据库管理系统提供的数据模式描述语言(Data Description Language，DDL)来描述、定义的。")])])]),s._v(" "),a("li",[s._v("物理级 --\x3e 内模式（反映了数据库系统的存储观）\n"),a("ul",[a("li",[s._v("内模式又称存储模式，对应于物理级。它是数据库中全体数据的内部表示或底层描述，是数据库最低一级的逻辑描述，它描述了数据在存储介质上的存储方式和物理结构，对应着实际存储在外存储介质上的数据库。内模式由内模式描述语言来描述、定义的。")])])])]),s._v(" "),a("p",[s._v("两级映射")]),s._v(" "),a("ol",[a("li",[s._v("外模式/模式的映像：实现外模式到概念模式之间的相互转换。\n"),a("ul",[a("li",[s._v("逻辑独立性：数据的逻辑独立性是指用户的应用程序与数据库结构是相互独立的。数据的逻辑结构发生变化后，用户程序也可以不修改。但是，为了保证应用程序能够正确执行，需要修改外模式/概念模式之间的映像。")])])]),s._v(" "),a("li",[s._v("模式/内模式的映像：实现概念模式到内模式之间的相互转换。\n"),a("ul",[a("li",[s._v("物理独立性：数据的物理独立性是指当数据库的内模式发生改变时，数据的的逻辑结构不变。由于应用程序处理的只是数据的逻辑结构，这样物理独立性可以保证，当数据的物理结构改变了，应用程序不用改变。但是，为了保证应用程序能够正确执行，需要修改概念模式/内模式之间的映像。")])])])]),s._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/mcb520wf/article/details/91047683",target:"_blank",rel:"noopener noreferrer"}},[s._v("数据库模式（三级模式+两级映射）_数据库的物理连接属于什么模式-CSDN博客"),a("OutboundLink")],1)]),s._v(" "),a("h4",{attrs:{id:"例题-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例题-2"}},[s._v("#")]),s._v(" 🌸例题")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("数据库系统通常采用三级模式结构:外模式、模式和内模式。这三级模式分别对应数据库的(B)\nA基本表、存储文件和视图\nB视图、基本表和存储文件\nC基本表、视图和存储文件\nD视图、存储文件和基本表\n\n以下关于数据库两级映像的叙述中，正确的是(B)\nA模式/内模式映像实现了外模式到内模式之间的相互转换\nB模式/内模式映像实现了概念模式到内模式之间的相互转换\nC外模式/模式的映像实现了概念模式到内模式之间的相互转换\nD外模式/内模式的映像实现了外模式到内模式之间的相互转换\n\n数据的物理独立性和逻辑独立性分别是通过修改 (D) 来完成的。\nA外模式与内模式之间的映像、模式与内模式之间的映像\nB外模式与内模式之间的映像、外模式与模式之间的映像\nC外模式与模式之间的映像、模式与内模式之间的映像\nD模式与内模式之间的映像、外模式与模式之间的映像\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("h3",{attrs:{id:"考点3-数据仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#考点3-数据仓库"}},[s._v("#")]),s._v(" 考点3：数据仓库")]),s._v(" "),a("h4",{attrs:{id:"数据仓库特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据仓库特点"}},[s._v("#")]),s._v(" 🌷数据仓库特点")]),s._v(" "),a("ol",[a("li",[s._v("面向主题：数据按主题组织。")]),s._v(" "),a("li",[s._v("集成的：消除了源数据中的不一致性，提供整个企业的一致性全局信息。")]),s._v(" "),a("li",[s._v("相对稳定的（非易失的）：主要进行查询操作，只有少量的修改和删除操作（或是不删除）。")]),s._v(" "),a("li",[s._v("反映历史变化（随着时间变化）：记录了企业从过去某一时刻到当前各个阶段的信息，可对发\n展历程和未来趋势做定量分析和预测。")])]),s._v(" "),a("p",[a("img",{attrs:{src:t(1624),alt:"image-20240402010612109"}})]),s._v(" "),a("p",[a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/433495465",target:"_blank",rel:"noopener noreferrer"}},[s._v("什么是数据仓库？它和数据库的区别是什么？看这一篇就够了 - 知乎 (zhihu.com)"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/hello_java_lcl/article/details/107025192",target:"_blank",rel:"noopener noreferrer"}},[s._v("数据仓库--数据分层（ETL、ODS、DW、APP、DIM）_数仓分层dim-CSDN博客"),a("OutboundLink")],1)]),s._v(" "),a("h4",{attrs:{id:"例题-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例题-3"}},[s._v("#")]),s._v(" 🌷例题")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("某集团公司下属有多个超市，每个超市的所有销售数据最终要存入公司的数据仓库中。假设该公司高管需要从时间、地区和商品种类三个维度来分析某家电商品的销售数据，那么最适合采用(B) 来完成。\nA DataExtraction 数据清理\nB OLAP 连接分析\nC OLTP 事务\nD ETL 抽取\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h2",{attrs:{id:"数据库设计过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库设计过程"}},[s._v("#")]),s._v(" 数据库设计过程")]),s._v(" "),a("h3",{attrs:{id:"数据库设计过程-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库设计过程-2"}},[s._v("#")]),s._v(" 数据库设计过程")]),s._v(" "),a("h4",{attrs:{id:"数据库设计过程图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库设计过程图"}},[s._v("#")]),s._v(" 数据库设计过程图")]),s._v(" "),a("p",[a("img",{attrs:{src:t(1625),alt:"软考-数据库设计过程"}})]),s._v(" "),a("p",[s._v("数据流图简称（OFD）")]),s._v(" "),a("p",[s._v("数据字典简称（DD）")]),s._v(" "),a("p",[s._v("聚簇索引在物理设计里")]),s._v(" "),a("h4",{attrs:{id:"例题-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例题-4"}},[s._v("#")]),s._v(" 例题")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("关系规范化在数据库设计的 (C) 阶段进行。\nA需求分析\nB概念设计\nC逻辑设计\nD物理设计\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"概念设计阶段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念设计阶段"}},[s._v("#")]),s._v(" 概念设计阶段")]),s._v(" "),a("h4",{attrs:{id:"考点1-概念设计过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#考点1-概念设计过程"}},[s._v("#")]),s._v(" 考点1：概念设计过程")]),s._v(" "),a("p",[a("img",{attrs:{src:t(1626),alt:"image-20240403001518713"}})]),s._v(" "),a("p",[s._v("集成的方法：")]),s._v(" "),a("ol",[a("li",[s._v("多个局部E-R图一次集成。")]),s._v(" "),a("li",[s._v("逐步集成，用累加的方式一次集成两个局部E-R。")])]),s._v(" "),a("p",[s._v("集成产生的冲突及解决办法：（针对同一对象）")]),s._v(" "),a("ol",[a("li",[s._v("居性冲突：包括属性域冲突和属性取值冲突。")]),s._v(" "),a("li",[s._v("命名冲突：包括同名异义和异名同义。")]),s._v(" "),a("li",[s._v("结构冲突：包括同一对象在不同应用中具有不同的抽象，以及同一实体在不同局部E-R图中所包含的属性个数和属性排列次序不完全相同。")])]),s._v(" "),a("h4",{attrs:{id:"考点2-e-r图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#考点2-e-r图"}},[s._v("#")]),s._v(" 考点2：E-R图")]),s._v(" "),a("h5",{attrs:{id:"e-r模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#e-r模型"}},[s._v("#")]),s._v(" E-R模型")]),s._v(" "),a("p",[a("img",{attrs:{src:t(1627),alt:"image-20240403002146866"}})]),s._v(" "),a("p",[s._v("**实体型：**用矩形表示，矩形框内写明实体名。")]),s._v(" "),a("p",[s._v("**属性：**用椭圆形表示，并用无向边将其与相应的实体型连接起来。")]),s._v(" "),a("p",[s._v("**联系：**用菱形表示，菱形框内写明联系名，并用无向边分别与有关实体型连接起来，同时在无向边旁标上联系的类型（1∶1，1∶n或m∶n）。（联系可以具有属性）。")]),s._v(" "),a("p",[a("strong",[s._v("特殊化")]),s._v("：用线条加圈或者矩形加平行线。")]),s._v(" "),a("p",[s._v("实体：实体是现实世界中可以区别于其他对象的事件或事物。(实体集一实体的集合)")]),s._v(" "),a("p",[s._v("属性：居性是实体某方面的特性。")]),s._v(" "),a("p",[s._v("联系：突体的联系分为实体内部的联系和实体与实体间的联系。实体间联系类型: 1:1，1:*，*😗")]),s._v(" "),a("h5",{attrs:{id:"属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[s._v("#")]),s._v(" 属性")]),s._v(" "),a("ol",[a("li",[s._v("简单属性和复合属性\n"),a("ul",[a("li",[a("strong",[s._v("简单属性")]),s._v("是原子的，不可再分的；")]),s._v(" "),a("li",[a("strong",[s._v("复合属性")]),s._v("可以细分为更小的部分 (即划分为别的属性)")])])]),s._v(" "),a("li",[s._v("单值属性和多值属性\n"),a("ul",[a("li",[s._v("定义的属性对于一个特定的实体都只有单独的一个值，称为单值属性")]),s._v(" "),a("li",[s._v("在某些特定情况下，一个属性可能对应一组值，称为多值属性。")])])]),s._v(" "),a("li",[s._v("NULL属性：表示无意义或不知道。")]),s._v(" "),a("li",[s._v("派生属性：可以从其他属性得来。")])]),s._v(" "),a("h5",{attrs:{id:"联系类型判断"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#联系类型判断"}},[s._v("#")]),s._v(" 联系类型判断")]),s._v(" "),a("p",[s._v("两个不同实体集之间联系")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("一对一（1:1）")])]),s._v(" "),a("li",[a("p",[s._v("一对多（1:n）")])]),s._v(" "),a("li",[a("p",[s._v("多对多（m:n）")])])]),s._v(" "),a("p",[s._v("两个以上不同实体集之间的联系（三元联系）多重度的确定可根据语义直接转换")]),s._v(" "),a("ul",[a("li",[s._v("以三元关系中的一个实体作为中心，假设另两个实体都只有一个实例；")]),s._v(" "),a("li",[s._v("若中心实体只有一个实例能与另两个实体的一个实例进行关联，则中心实体的连通数为“一”；")]),s._v(" "),a("li",[s._v("若中心实体有多于一个实例能与另两个实体实例进行关联，则中心实体的连通数为“多”。")])]),s._v(" "),a("p",[s._v("同一个实体集内的二元联系")]),s._v(" "),a("h5",{attrs:{id:"扩充的e-r模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#扩充的e-r模型"}},[s._v("#")]),s._v(" 扩充的E-R模型")]),s._v(" "),a("p",[s._v("弱实体：在现实世界中有一种特殊的依赖联系;该联系是指某实体是否存在对于另些实体具有很强的依赖关系，即一个实体的存在必须以另一个实体为前提，而将这类实体称为弱实体，如家属与职工的联系，附件与邮件。\n特殊化：在现实世界中，某些实体一方面具有一些共性，另一方面还只有各自的特性，一个实体集可以按照某些特征区分为几个子实体。")]),s._v(" "),a("p",[s._v("聚集：一个联系作为另一个联系的一端。")]),s._v(" "),a("h3",{attrs:{id:"逻辑结构设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#逻辑结构设计"}},[s._v("#")]),s._v(" 逻辑结构设计")]),s._v(" "),a("h4",{attrs:{id:"考点1-关系模式相关概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#考点1-关系模式相关概念"}},[s._v("#")]),s._v(" 考点1：关系模式相关概念")]),s._v(" "),a("h5",{attrs:{id:"数据模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据模型"}},[s._v("#")]),s._v(" 数据模型")]),s._v(" "),a("p",[s._v("层次模型")]),s._v(" "),a("p",[s._v("网状模型")]),s._v(" "),a("p",[s._v("关系模型")]),s._v(" "),a("p",[s._v("面向对象模型")]),s._v(" "),a("p",[s._v("注：数据模型三要素:数据结构、数据操作、数据的约束条件")]),s._v(" "),a("h5",{attrs:{id:"关系模型相关概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关系模型相关概念"}},[s._v("#")]),s._v(" 关系模型相关概念")]),s._v(" "),a("ul",[a("li",[s._v("目或度：关系模式中属性的个数")]),s._v(" "),a("li",[s._v("侯选码（候选键）")]),s._v(" "),a("li",[s._v("主码（主键）")]),s._v(" "),a("li",[s._v("主属性与非主属性：组成候选码的属性就是主属性，其它的就是非主属性。")]),s._v(" "),a("li",[s._v("外码（外键）")]),s._v(" "),a("li",[s._v("全码（ALL-Key）：关系模式的所有属性组是这个关系的候选码。")])]),s._v(" "),a("h5",{attrs:{id:"关系的3种类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关系的3种类型"}},[s._v("#")]),s._v(" 关系的3种类型")]),s._v(" "),a("ol",[a("li",[s._v("基本关系")]),s._v(" "),a("li",[s._v("查询表")]),s._v(" "),a("li",[s._v("视图表")])]),s._v(" "),a("h5",{attrs:{id:"完整性约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#完整性约束"}},[s._v("#")]),s._v(" 完整性约束")]),s._v(" "),a("ol",[a("li",[s._v("实体完整性约束（主键：唯一、非空）")]),s._v(" "),a("li",[s._v("参照完整性约束（外键：其他关系主键或为空）")]),s._v(" "),a("li",[s._v("用户自定义完整性约束（check条件）")])]),s._v(" "),a("p",[s._v("注：触发器完成复杂完整性约束条件设定")]),s._v(" "),a("h4",{attrs:{id:"考点2-e-r图转关系模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#考点2-e-r图转关系模式"}},[s._v("#")]),s._v(" 考点2：E-R图转关系模式")]),s._v(" "),a("h5",{attrs:{id:"逻辑结构设计-e-r模型转关系模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#逻辑结构设计-e-r模型转关系模式"}},[s._v("#")]),s._v(" 逻辑结构设计-E-R模型转关系模式")]),s._v(" "),a("ul",[a("li",[s._v("一个实体型必须转换为一个关系模式")]),s._v(" "),a("li",[s._v("联系转关系模式")])]),s._v(" "),a("p",[a("img",{attrs:{src:t(1628),alt:"image-20240405015332787"}})]),s._v(" "),a("p",[s._v("（1）一对一联系的转换有两种方式。")]),s._v(" "),a("ul",[a("li",[s._v("独立的关系模式：并入两端主键及联系自身属性。（主键：任一键主键）")]),s._v(" "),a("li",[s._v("归并（可以并入任意一端）：并入另一端主键及联系自身属性。（主键：保持不变）")])]),s._v(" "),a("p",[a("img",{attrs:{src:t(1629),alt:"image-20240405020042915"}})]),s._v(" "),a("p",[s._v("（2）一对多联系的转换有两种方式。")]),s._v(" "),a("ul",[a("li",[s._v("独立的关系模式：并入两端主键及联系自身属性。（主键：多端主键）")]),s._v(" "),a("li",[s._v("归并（只能并入多端）：并入另一端主键及联系自身属性。（主键：保持不变）")])]),s._v(" "),a("p",[a("img",{attrs:{src:t(1630),alt:"image-20240405020308355"}})]),s._v(" "),a("p",[s._v("（3）多对多联系的转换只有一种方式")]),s._v(" "),a("ul",[a("li",[s._v("独立的关系模式：并入两端主键及联系自身属性。 （主键：两端主键的组合键）")])]),s._v(" "),a("p",[a("img",{attrs:{src:t(1631),alt:"image-20240405020710688"}})]),s._v(" "),a("h5",{attrs:{id:"e-r图转关系模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#e-r图转关系模式"}},[s._v("#")]),s._v(" E-R图转关系模式")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("联系类型")]),s._v(" "),a("th",[s._v("实体（独立关系模式）")]),s._v(" "),a("th",[s._v("联系（独立关系模式）")]),s._v(" "),a("th",[s._v("联系（归并关系模式）")]),s._v(" "),a("th",[s._v("备注")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("1对1")]),s._v(" "),a("td",[s._v("√")]),s._v(" "),a("td",[s._v("√")]),s._v(" "),a("td",[s._v("√")]),s._v(" "),a("td",[s._v("并入任一端")])]),s._v(" "),a("tr",[a("td",[s._v("1对多")]),s._v(" "),a("td",[s._v("√")]),s._v(" "),a("td",[s._v("√")]),s._v(" "),a("td",[s._v("√")]),s._v(" "),a("td",[s._v("并入多端")])]),s._v(" "),a("tr",[a("td",[s._v("多对多")]),s._v(" "),a("td",[s._v("√")]),s._v(" "),a("td",[s._v("√")]),s._v(" "),a("td",[s._v("×")]),s._v(" "),a("td")])])]),s._v(" "),a("h2",{attrs:{id:"关系代数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关系代数"}},[s._v("#")]),s._v(" 关系代数")]),s._v(" "),a("p",[s._v("（2-4分）")]),s._v(" "),a("h3",{attrs:{id:"关系代数-并、交、差"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关系代数-并、交、差"}},[s._v("#")]),s._v(" 关系代数–并、交、差")]),s._v(" "),a("p",[a("img",{attrs:{src:t(1632),alt:"image-20240405225245679"}})]),s._v(" "),a("p",[s._v("垂直：属性列，目，度")]),s._v(" "),a("p",[s._v("水平：元组行，记录，实例")]),s._v(" "),a("p",[s._v("并(结果为二者元组之和去除重复行)")]),s._v(" "),a("p",[s._v("交(结果为二者重复行)")]),s._v(" "),a("p",[s._v("差(前者去除二者重复行)")]),s._v(" "),a("h3",{attrs:{id:"关系代数-笛卡尔积、投影、选择"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关系代数-笛卡尔积、投影、选择"}},[s._v("#")]),s._v(" 关系代数–笛卡尔积、投影、选择")]),s._v(" "),a("p",[a("img",{attrs:{src:t(1633),alt:"在这里插入图片描述"}})]),s._v(" "),a("p",[s._v("笛卡尔积：属性列数为二者属性列数之和，元组行数为二者乘积。")]),s._v(" "),a("p",[s._v("投影：对属性列的选择列出，就是把需要的字段显示出来即可。")]),s._v(" "),a("p",[s._v("选择：选择是根据某些条件对关系做水平切割，对元组行的选择列出如上述中Sn0-Sn0003(S1)，是指从S1中选择Sno字段为Snooo3的数据。")]),s._v(" "),a("p",[s._v("选择操作不会操作表格结构，笛卡尔积和投影可能会修改")]),s._v(" "),a("h3",{attrs:{id:"关系代数-自然连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关系代数-自然连接"}},[s._v("#")]),s._v(" 关系代数–自然连接")]),s._v(" "),a("p",[a("img",{attrs:{src:t(1634),alt:"在这里插入图片描述"}})]),s._v(" "),a("p",[s._v("自然连接：属性列数是二者之和减去重复列数，元祖行与同名属性列取值相等")]),s._v(" "),a("p",[s._v("性能比较：")]),s._v(" "),a("p",[s._v("自然连接>笛卡尔")]),s._v(" "),a("p",[s._v("两侧数据应尽量先压缩、筛选")]),s._v(" "),a("p",[s._v("select 是投影的结果")]),s._v(" "),a("p",[s._v("from 多个表格是笛卡尔的结果")]),s._v(" "),a("p",[s._v("where 选择")]),s._v(" "),a("h3",{attrs:{id:"例题-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#例题-5"}},[s._v("#")]),s._v(" 例题")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("给定关系R (A，B，C，D)和关系S (A，C，E，F)，对其进行自然连接运R&S算后的属性列为 (C)个;\n与oR.B>S.E(R&S)等价的关系代数表达式为(B)\nA 4  B 5   C 6     D 8\nA σ2>7(R×S)\nB π1,2,3,4,7,8(σ1=5∧2>7∧3=6(R×S))\nC σ2>'7'(R×S)\nD π1,2,3,4,7,8(σ1=5∧2>'7'∧3=6(R×S))\n\n下列查询B=“大数据”且F=“开发平台”，结果集属性列为A、B、C、F的关系代致表达式中，查询效率最高的是 (D) 。\nA π1,2,3,8(σ2='大数据'∧1=5∧3=6∧8='开发平台'(R×S))\nB π1,2,3,8(σ1=5∧3=6∧8='开发平台'(σ2='大数据'(R)×S)\nC π1,2,3,8(σ2='大数据'∧1=5>3=6(R×σ4='开发平台'(S))\nD π1,2,3,8(σ1=5∧3=6(σ2='大数据'(R)×σ4='开发平台'(S))\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/JavaEEKing/article/details/109223552",target:"_blank",rel:"noopener noreferrer"}},[s._v("数据库系统之：关系代数详解-超详细_数据库关系代数-CSDN博客"),a("OutboundLink")],1)]),s._v(" "),a("h2",{attrs:{id:"规范化理论"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#规范化理论"}},[s._v("#")]),s._v(" 规范化理论")]),s._v(" "),a("p",[s._v("考点1：规范化理论基本概念")]),s._v(" "),a("p",[s._v("考点2：范式判断")]),s._v(" "),a("p",[s._v("考点3：模式分解")]),s._v(" "),a("h3",{attrs:{id:"考点1-规范化理论基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#考点1-规范化理论基本概念"}},[s._v("#")]),s._v(" 考点1：规范化理论基本概念")]),s._v(" "),a("p",[s._v("考的很频繁（上午2分，下午可能有）")]),s._v(" "),a("h4",{attrs:{id:"函数依赖"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数依赖"}},[s._v("#")]),s._v(" 函数依赖")]),s._v(" "),a("p",[a("strong",[s._v("定义")]),s._v("：设R(U)是属性U上的一个关系模式，X和Y是U的子集，r为R的任一关系，如果对于r中的任意两个元组u，v，只要有u[X]=v[X]，就有u[Y]=v[Y]，则称X函数决定Y，或称Y函数依赖于X，记为X→Y。（X决定因素，Y被决定因素）")]),s._v(" "),a("p",[s._v("函数依赖可扩展以下两种规则：")]),s._v(" "),a("ol",[a("li",[a("strong",[s._v("部分函数依赖")]),s._v("：A可确定C，（A，B）也可确定C，（A，B）中的一部分（即A）可以确定C，称为部分函数依赖。")]),s._v(" "),a("li",[a("strong",[s._v("传递函数依赖")]),s._v("：当A和B不等价时，A可确定B，B可确定C，则A可确定C，是传递函数依赖；若A和B等价，则不存在传递，直接就可确定C。")])]),s._v(" "),a("p",[a("img",{attrs:{src:t(1635),alt:"在这里插入图片描述"}})]),s._v(" "),a("h4",{attrs:{id:"规范化理论一amstrong公理体系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#规范化理论一amstrong公理体系"}},[s._v("#")]),s._v(" 规范化理论一Amstrong公理体系")]),s._v(" "),a("p",[s._v("关系模式R<U，F>来说有以下的推理规则:")]),s._v(" "),a("p",[s._v("A1."),a("strong",[s._v("自反律")]),s._v(" (Reflexivity) ：若Y∈X∈U，则X→Y成立。")]),s._v(" "),a("p",[s._v("A2."),a("strong",[s._v("增广律")]),s._v(" (Augmentation) ：若Z∈U且X→Y，则XZ→YZ成立。")]),s._v(" "),a("p",[s._v("A3."),a("strong",[s._v("传递律")]),s._v(" (Transitivity) ：若X→Y且Y→Z，则X→Z成立。")]),s._v(" "),a("p",[s._v("根据A1，A2，A3这三条推理规则可以得到下面三条推理规则：")]),s._v(" "),a("p",[a("strong",[s._v("合并规则")]),s._v("：由X→Y，X→Z，有X→YZ。(A2，A3)")]),s._v(" "),a("p",[a("strong",[s._v("伪传递规则")]),s._v("：由X→Y，WY→Z，有XW→Z。(A2，A3)")]),s._v(" "),a("p",[a("strong",[s._v("分解规则")]),s._v("：由X→Y及Z∈Y，有X→Z。(A1，A3)")]),s._v(" "),a("h4",{attrs:{id:"候选键"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#候选键"}},[s._v("#")]),s._v(" 候选键")]),s._v(" "),a("p",[s._v("超键：能唯一标识此表的属性的组合。")]),s._v(" "),a("p",[s._v("候选键：超键中去掉冗余的属性，剩余的属性就是候选键。")]),s._v(" "),a("p",[s._v("主键：任选一个候选键，即可作为主键。")]),s._v(" "),a("p",[s._v("外键：其他表中的主键。")]),s._v(" "),a("p",[s._v("图示法求候选")]),s._v(" "),a("ol",[a("li",[s._v("将关系的函数依赖关系，用“有向图”的方式表示。")]),s._v(" "),a("li",[s._v("找出"),a("strong",[s._v("入度为0")]),s._v("的属性，并以该属性集合为起点，尝试遍历有向图，若能正常遍历图中所有结点，则该属性集即为关系模式的候选键。")]),s._v(" "),a("li",[s._v("若入度为0的属性集不能遍历图中所有结点，则需要尝试性的将一些"),a("strong",[s._v("中间结点")]),s._v(" (既有入度，也有出度的结点)并入入度为0的属性集中，直至该集合能遍历所有结点，集合为候选键。")])]),s._v(" "),a("p",[a("img",{attrs:{src:t(1636),alt:"image-20240407001349605"}})]),s._v(" "),a("h4",{attrs:{id:"主属性与非主属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主属性与非主属性"}},[s._v("#")]),s._v(" 主属性与非主属性")]),s._v(" "),a("p",[s._v("主属性：候选键内的属性为主属性，其他属性为非主属性。")]),s._v(" "),a("div",{staticClass:"language-markdown line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[s._v("例1: 关系模式CSZ(CITV，ST，ZIP）, 其属性组上的函数依赖集为:F={（CITV，ST）→ZIP，ZIP→CITV},其中CITY表示城市，ST表示街道，ZIP表示邮政编码。\n候选键有两个，都为组合键：（ST，CITV）（ST，ZIP）\n主属性：CITV，ST，ZIP\n非主属性：没有\n\n\n例2: 若给定的关系模式为R，U={A,B,C}， F={AB→C,C→B}，则关系R(B)。\nA有2个候选关键字AC和BC，并且有3个主属性\nB有2个候选关键字AC和AB，并且有3个主属性\nC只有一个候选关键字AC，并且有1个非主属性和2个主属性\nD 只有一个候选关键字AB，并且有1个非主属性和2个主属性\n\n例3: 给定关系模式R(U，F)，其中:U为关系模式R中的属性集，F是U上的一组函数依赖。假设U={A1，A2，A3，A4}，F={A1→A2，A1A2→A3，A1→A4，A2→A4}，那么关系R的主键应为 (A)。函数依赖集F中的(D)是冗余的。\nA A1     B A1A2     C A1A3   D A1A2A3\nA A1→A2  B A1A2→A3  C A1→A4  D A2→A4\n\n例4: 给定关系模式RU，F>，其中U为属性集，F是U上的一组函数依赖，那么Armstrong公理系统的伪传递律是指 (B)。问题1选项\nA 若X→Y，X→Z，则X→YZ为F所蕴涵   合并律\nB 若X→Y，WY→Z，则XW→Z为F所蕴涵    伪传递律\nC 若X→Y，Y→Z为F所蕴涵，则X→Z为F所蕴涵   传递率\nD 若X→Y为F所蕴涵，且Z∈U，则XZ→YZ为F所蕴涵    增广律\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br")])]),a("p",[s._v("实体完整性约束：即主键约束，主键值不能为空，也不能重复。")]),s._v(" "),a("p",[s._v("参照完整性约束：即外键约束，外键必须是其他表中已经存在的主键的值，或者为空。")]),s._v(" "),a("p",[s._v("用户自定义完整性约束：自定义表达式约束，如设定年龄属性的值必须在0到150之间。")]),s._v(" "),a("h3",{attrs:{id:"考点2-范式判断"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#考点2-范式判断"}},[s._v("#")]),s._v(" 考点2：范式判断")]),s._v(" "),a("p",[s._v("规范化问题：")]),s._v(" "),a("p",[s._v("数据冗余")]),s._v(" "),a("p",[s._v("修改异常")]),s._v(" "),a("p",[s._v("插入异常")]),s._v(" "),a("p",[s._v("删除异常")]),s._v(" "),a("p",[s._v("第一范式1NF：在关系模式R中，当且仅当所有域只包含原子值，即每个属性都是不可再分的数据项，则称关系模式R是第一范式。")]),s._v(" "),a("p",[s._v("第二范式2NF：当且仅当R是1NF，且每一个非主属性完全依赖主键（不存在部分依赖）时，R就是2NF。")]),s._v(" "),a("p",[s._v("比较典型的例子就是候选键是单属性，单属性是不可能存在部分函数依赖的。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("思考题: 关系模式SC(学号，课程号，成绩，学分)，其中: (学号，课程号一成绩，课程号一学分，会存在哪些问题 (从数据兄余、更新异常、插入异常、删除异常这几个方面来考虑)，解决方案是什么?\n1、找候选键（学号、课程号）\n2、找非主属性（成绩、学分）\n3、判断非主属性是否存在对候选键的部分函数依赖。组合候选键中学号可以决定非主属性学分，所以存在，只满足第一范式。（学号，课程号一成绩）（课程号一学分）\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("第三范式3NF：当且仅当R是2NF，且R中没有非主属性传递依赖于候选键时，R就是3NF（此时，也不会存在部分依赖）。")]),s._v(" "),a("p",[s._v("一般解决方法是拆分传递依赖的非主属性为一个新的关系模式。本质就是主键要直接决定所有非主属性，不能通过非主属性间接决定。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("思考题:学生关系 (学号，姓名，系号，系名，系位置)各属性分别代表学号，姓名，所在系号，系名称，系地址。思考该关系模式会存在哪些问题 (从数据冗余、更新异常、插入异常、删除异常这几个方面来考虑)，解决方案是什么?\n1、找候选键（学号）。单属性候选键，至少满足第二范式\n2、找非主属性（姓名，系号，系名，系位置）\n3、判断是否满足3NF。不满足。(学号，姓名，系号)(系号，系名，系位置)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("BC范式 (BCNF)：设R是一个关系模式，F是它的依赖集，R属于BCNF当且仅当其F中"),a("strong",[s._v("每个依赖的决定因素必定包含R的某个候选码")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("例: 关系模式ST (S，T，J ）中，S表示学生，T表示老师，J表示课程。每一老师只教一门课程。每门课程有若干老师，某一学生选定某门课，就对应一个固定老师。\n（T——J）（SJ——T）\n1、找候选键（SJ、ST）\n2、找非主属性（无）\n3、判断2NF。没有非主属性，也就没有非主属性对候选键的部分函数依赖\n4、判断3NF。没有非主属性，也就没有非主属性对候选键的陈传递依赖。\n5、判断BC。关系一中决定因素T不包含候选键\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[a("img",{attrs:{src:t(1637),alt:"数据库范式（1NF、2NF、3NF、BCNF）_1nf,2nf,3nf,bcnf的理解-CSDN博客"}})]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("范式")]),s._v(" "),a("th",[s._v("属性不可再分")]),s._v(" "),a("th",[s._v("非主属性部分函数依赖于候选键")]),s._v(" "),a("th",[s._v("非主属性传递函数依赖于候选键")]),s._v(" "),a("th",[s._v("函数依赖左侧决定因素包含候选键")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("1NF")]),s._v(" "),a("td",[s._v("√")]),s._v(" "),a("td",[s._v("存在")]),s._v(" "),a("td"),s._v(" "),a("td")]),s._v(" "),a("tr",[a("td",[s._v("2NF")]),s._v(" "),a("td",[s._v("√")]),s._v(" "),a("td",[s._v("不存在")]),s._v(" "),a("td",[s._v("存在")]),s._v(" "),a("td")]),s._v(" "),a("tr",[a("td",[s._v("3NF")]),s._v(" "),a("td",[s._v("√")]),s._v(" "),a("td",[s._v("不存在")]),s._v(" "),a("td",[s._v("不存在")]),s._v(" "),a("td",[s._v("不满足")])]),s._v(" "),a("tr",[a("td",[s._v("BCNF")]),s._v(" "),a("td",[s._v("√")]),s._v(" "),a("td",[s._v("不存在")]),s._v(" "),a("td",[s._v("不存在")]),s._v(" "),a("td",[s._v("满足")])])])]),s._v(" "),a("p",[s._v("例题")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("某公司数据库中的元件关系模式为P(元件号，元件名称，供应商，供应商所在地，库存量)，函数依赖集F如下所示:F={元件号一元件名称， (元件号，供应商)一库存量，供应商一供应商所在地}\n元件关系的主键为 (B)，该关系存在冗余以及插入异常和删除异常等问题。为了解决这一间题需要将元件关系分解(C);分解后的关系模式可以达到(C)。\nA元件号，元件名称\nB元件号，供应商\nC元件号，供应商所在地\nD供应商，供应商所在地\nA元件1 (元件号，元件名称，库存量)、元件2(供应商，供应商所在地)\nB元件1 (元件号，元件名称)、元件2 (供应商，供应商所在地，库存量\nC元件1 (元件号，元件名称)、元件2(元件号，供应商，库存量)、元件3(供立商，供应商所在地\nD元件1 (元件号，元件名称)、元件2(元件号，库存量)、元件3(供应商，供应商所在地)、元件4 (供应商所在地，库存量)\nAINF\nB2NF\nC3NF\nD4NF\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("h3",{attrs:{id:"考点3-模式分解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#考点3-模式分解"}},[s._v("#")]),s._v(" 考点3：模式分解")])])}),[],!1,null,null,null);a.default=_.exports}}]);